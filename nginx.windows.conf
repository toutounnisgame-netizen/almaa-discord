###############################################################################
#  nginx.windows.conf
#
#  Reverse proxy configuration for the ALMAA Discord‑IA platform on
#  Windows.  This file is mounted into the official Nginx container
#  running inside Docker Desktop.  It terminates TLS with a self‑signed
#  certificate generated by install.ps1, serves static frontend assets
#  and proxies API and WebSocket traffic to the appropriate backend
#  containers.  Paths and hostnames are intentionally kept simple for
#  offline deployments.
###############################################################################

worker_processes auto;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Logging to stdout/err so Docker can capture logs
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # Gzip can reduce bandwidth inside the LAN
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Map for WebSocket upgrade handling
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Upstream definitions for backend services
    upstream api_backend {
        server api:${API_PORT};
    }

    upstream websocket_backend {
        server api:${WS_PORT};
    }

    server {
        listen 80;
        server_name localhost;
        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # TLS configuration using self‑signed certificate
        ssl_certificate     /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Root directory for static frontend assets
        root /usr/share/nginx/html;
        index index.html;

        # Proxy API requests to FastAPI backend
        location /api/ {
            proxy_pass         http://api_backend/;
            proxy_http_version 1.1;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Connection "";
        }

        # Proxy WebSocket connections to the same API container.  CrewAI
        # agents and the frontend will communicate over Socket.IO in
        # Phase 2/3.  The map directive defined above handles the upgrade.
        location /socket.io/ {
            proxy_pass              http://websocket_backend/;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection $connection_upgrade;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
        }

        # Serve static content for the frontend.  Try to find a matching
        # file; if not found, fall back to index.html so client‑side
        # routing still works (SPA behaviour).
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}